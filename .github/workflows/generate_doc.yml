name: Generate Documentation

on:
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        working-directory: ./node
        with:
          node-version: 18.x

      - name: Run install
        uses: borales/actions-yarn@v4
        working-directory: ./node
        with:
          cmd: install # will run `yarn install` command

      - name: Generate Documentation
        uses: borales/actions-yarn@v4
        working-directory: ./node
        with:
          cmd: doc
      
      - name: Generate Package
        uses: borales/actions-yarn@v4
        working-directory: ./node
        with:
          cmd: build
      
      - name: compress to tar
        working-directory: ./node
        run: |
          ./make_package.sh
          ./make_client.sh

          cp package.tar.gz docs/server.tar.gz
          cp client/package.tar.gz docs/client.tar.gz
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: 'node/docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2